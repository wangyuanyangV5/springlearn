<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis1.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis1.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.mybatis.model.UserInfo">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="usertype" jdbcType="VARCHAR" property="usertype" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mybatis.model.UserInfo">
    insert into user_info (Id, username, password, 
      usertype, enabled, realname, 
      qq, email, tel)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, #{realname,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mybatis.model.UserInfo">
    update user_info
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      realname = #{realname,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select Id, username, password, usertype, enabled, realname, qq, email, tel
    from user_info
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select Id, username, password, usertype, enabled, realname, qq, email, tel
    from user_info
  </select>
</mapper>