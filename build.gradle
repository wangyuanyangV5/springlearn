group 'springframework'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
//    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

configurations {
    mybatisGenerator
}

dependencies {
    compile 'org.springframework:spring-context:5.1.0.RELEASE'
    compile 'org.springframework:spring-aspects:5.1.0.RELEASE'

    compile 'org.springframework:spring-jdbc:5.1.0.RELEASE'
    compile 'org.springframework:spring-test:5.1.0.RELEASE'

    compile 'org.springframework:spring-web:5.1.0.RELEASE'
    compile 'org.springframework:spring-webmvc:5.1.0.RELEASE'
//    compile 'org.springframework:spring-websocket:3.2.6.RELEASE'
  //  compile 'org.springframework:spring-messaging:3.2.6.RELEASE'
    //compile 'org.springframework:spring-webflux:3.2.6.RELEASE'
    compile  'javax.servlet:javax.servlet-api:4.0.1'

    compile 'org.mybatis:mybatis:3.4.4'
    compile 'org.mybatis:mybatis-spring:1.3.0'
    compile "org.projectlombok:lombok:1.16.6"

    compile 'c3p0:c3p0:0.9.1.2'
    compile "org.slf4j:slf4j-log4j12:1.7.16"
    compile 'mysql:mysql-connector-java:5.1.40'
    compile 'cglib:cglib:3.1'
    compile 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    compile 'mysql:mysql-connector-java:5.1.40'
    compile 'tk.mybatis:mapper:3.3.9'

    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.40'
    mybatisGenerator 'tk.mybatis:mapper:3.3.9'


    testCompile group: 'junit', name: 'junit', version: '4.12'
}
def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}


task mybatisGenerate << {
    def properties = getDbProperties()
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}